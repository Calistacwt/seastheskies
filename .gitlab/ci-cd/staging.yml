stages:
  - build
  - deploy

build:staging:
  stage: build
  image: nbsdev/docker-builder:20
  script:
    # Create Env File
    - cp $ENV_FILE .env.production
    - echo "APP_VERSION=\"${CI_COMMIT_TAG}\"" >> .env
    - echo "APP_BUILD_SIGNATURE=\"${CI_COMMIT_SHA}\"" >> .env
    # Build docker
    - docker build -f ./deployments/web/Dockerfile -t ${CI_REGISTRY_IMAGE}/staging:latest  .
    # Push docker
    - echo "${CI_REGISTRY_PASSWORD}" | docker login ${CI_REGISTRY} -u ${CI_REGISTRY_USER} --password-stdin
    - docker push ${CI_REGISTRY_IMAGE}/staging:latest
    # Remove versioned docker
    - docker rmi ${CI_REGISTRY_IMAGE}/staging:latest
  # Define Environment
  environment:
    name: staging
    url: https://staging.nbs-hr-cms-web-apps.web.app
  # Executed only on these condition
  rules:
    - if: $CI_SERVER_HOST == "code.nbs.dev" && $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/
  # Executor
  tags:
    - nbs--docker-runner

deploy:staging:
  stage: deploy
  image:
    name: cr.nbs.dev/dt/kubectl:1.22.7
    entrypoint: [ "" ]
  needs:
    - build:staging
  script:
    # Rollout & Restart Deployment
    - kubectl
      --kubeconfig="/dev/null"
      --server=${K8S_SERVER}
      --certificate-authority=${K8S_SERVER_CERT_FILE}
      --token=${K8S_TOKEN}
      --namespace=${K8S_NAMESPACE}
      rollout
      restart
      deployment/${K8S_DEPLOYMENT}
  # Define Environment
  environment:
    name: staging
    url: https://staging.nbs-hr-cms-web-apps.web.app
  # Executed only on these condition
  rules:
    - if: $CI_SERVER_HOST == "code.nbs.dev" && $CI_COMMIT_TAG =~ /^v\d+.\d+.\d+/
  # Executor
  tags:
    - nbs--docker-runner
